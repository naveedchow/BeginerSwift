
// Control Flow Exercise

/*
1. Print all negative even numbers which are greater than n
n can be declared as a constant (let n = -999 for example)

*/

var numberArray :[Int] = []
let n = -999
var number = 0
for number in n...0 {
    if  number % 2 == 0  {
    numberArray.append(number)
 }
}
print(numberArray)


/*
Print all positive numbers which divisible by 3
n can be declared as a constant (let n = 1999 for example)
*/

var numberPositive : [Int] = []
let n = 1999
var number = 0
for number in 0...n {
    if number % 3 == 0   {
        numberPositive.append(number)
    }
}
print(numberPositive)

/*
Print the first n square numbers. A square number, also called perfect square, is an integer that is obtained by squaring some other integer; in other words, it is the product of some integer with itself (ex. 1, 4 = 2 * 2, 9 = 3* 3 â€¦).
n can be declared as a constant (let n = 10 for example)
*/

var arraySquare : [Int] = []
let n = 10
var number = 1
for number in 1...n {
    let squaredNumber = (number * number)
    arraySquare.append(squaredNumber)
}
print(arraySquare)

/*

*/
